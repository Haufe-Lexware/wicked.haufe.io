extends layout

block bodyScripts
    script(type='text/javascript').
        var approvals;
        function donwloadCSVFile() {
          var filter = $("#approvalsGrid").jsGrid("getFilter");
          window.location = `/admin/approvals_csv?${$.param(filter)}`;
        };
        function approveSubscription(action, item) {
          $.ajax({
            url: `/admin/approvals/${action}`,
            type: "POST",
            dataType: "json",
            data: {
              id: item.id,
              app: item.application.id,
              api: item.api.id
            }
          }).done(function () {
              $('#approvalsGrid').jsGrid("deleteItem", item);
              approvals = approvals.filter(function(approval){ return approval.id != item.id; });
          }).fail(function () {
            alert(`Failed to ${action} subscription`);
          }); 
        }

        $(document).ready(function(){
           window.onpopstate = function (event) {
              initializeGridFromState(grid).then(() => { grid.isGridRefreshAvailable = true }).catch(err => console.log('Error', err));
           }
           approvals = !{approvals};     
           $('#approvalsGrid').jsGrid({
             width: "100%", pageSize: 10, sorting: true, paging: true, filtering: true, autoload: true, confirmDeleting: false,
             controller: {
              loadData: function (filter) {
                  var d = $.Deferred();
                  var data = approvals;
                  if (isEmptyGridFilter(filter)) {
                    d.resolve(data);
                    return d.promise();
                  }
                  data = $.grep(data, function (item) {
                    if (applyGridFilter(filter, item))
                       return item;
                  });
                  d.resolve(data);
                  return d.promise();
              }
            },
            fields: [
              { name: "user.email", type: "text", title: "User",
                itemTemplate: function (value, item) {
                  return $("<a>").attr("href", "/users/" + item.user.id).text(value);
                }
              },
              { name: "application.name", type: "text", title: "Application",
                itemTemplate: function(value, item) {
                  const content = item.application.description ? item.application.description : 'No Content';
                  let $elem = $("<a>").attr({"href": "/applications/" + item.application.id,}).addClass("target").text(value);
                  setMouseOverElementContent($elem, content);
                  return $elem;
                }
              },
              { name: "application.trusted", type: "text", title: "Trusted", width: "4%",
                itemTemplate: function (value, item) {
                  return item.application.trusted ? 'Yes' : '-';
                }
              },
              { name: "api.id", type: "text", title: "API",
                itemTemplate: function(value, item) {
                  return $("<a>").attr("href", "/apis/"+item.api.id).text(value);
                }
              },
              { name: "plan.name", type: "text", title: "Plan" },
              { name: "changedDate", type: "text", title: "Date (UTC)",
                itemTemplate: function (value, item) {
                  const date = dateFormat (new Date (value), "%Y-%m-%d %H:%M:%S", true);
                  return $("<span>").text(date);
                }
              },
              { type: "actions",  type: "control", width: "100",
                      _createFilterSwitchButton: function() {
                        return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                      },
                      itemTemplate: function(value,item) {
                       var $approveBtn = $("<button>").attr("type", "submit")
                                                      .attr("class", "btn btn-sm btn-success")
                                                      .attr("style", "float: left; margin: 2px; width: 6em")
                                                      .text("Approve")
                                                      .on("click", function () {
                                                       approveSubscription('approve', item);
                                                      });
                        var $declineBtn = $("<button>").attr("type", "submit")
                                                      .attr("class", "btn btn-sm btn-danger")
                                                      .attr("style", "float: left; margin: 2px; width: 6em")
                                                      .text("Decline")
                                                      .on("click", function () {
                                                        approveSubscription('decline', item);
                                                      });
                       return $("<td nowrap>").append($approveBtn)
                                      .append("<span>&nbsp;</span>")
                                      .append($declineBtn);
                    }
              }
            ]
           });
           $("#approvalsGrid").jsGrid("option", "filtering", false);
           var grid = $("#approvalsGrid").data("JSGrid");
           grid.isGridRefreshAvailable = true;
           initializeGridFromState(grid).then(() => { grid.isGridRefreshAvailable = true }).catch(err => console.log('Error', err));
        });
block content
    .jumbotron.wicked-admin-title
        .container.wicked-title-container
            h1 Pending Subscription Approvals

            p Please review the pending subscription approvals. You may either approve of or decline the subscription.

    .container.wicked-container
        if approvals.length == 0
            h3 No pending approvals
        else

            p Before approving of "trusted" subscriptions, <a href="/help/trusted" target="_blank">please be aware of the impliciations</a>.

            div#approvalsGrid

            br
            p
              button(class="btn btn-success" onclick="donwloadCSVFile()") Download as CSV
