{{- if .Values.postgres.deployPostgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-kong-database
  namespace: {{ default "default" .Values.namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: {{ template "fullname" . }}-kong-database
      wicked: "true"
  template:
    metadata:
      labels:
        service: {{ template "fullname" . }}-kong-database
        wicked: "true"
    spec:
{{- if .Values.useRbac }}
      serviceAccountName: {{ template "fullname" . }}-role 
{{- end }}
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-postgres
              key: pgUser
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-postgres
              key: pgPassword
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        image: postgres:9.6
        name: {{ template "fullname" . }}-kong-database
        args:
          {{- range $key, $value := default dict .Values.postgres.runtimeConfig }}
          - -c
          - '{{ $key | snakecase }}={{ $value }}'
          {{- end }}
        ports:
        - name: "psql"
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: kong-db-data
{{- if .Values.postgres.persistence.subPath }}
          subPath: {{ .Values.postgres.persistence.subPath }}
{{- end }}
        resources:
{{ toYaml .Values.postgres.resources | indent 10 }}
      restartPolicy: Always
{{- if .Values.nodeSelector }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      volumes:
      - name: kong-db-data
{{- if not .Values.postgres.persistence.enabled }}
        emptyDir: {}
{{- else if and .Values.postgres.persistence.enabled (not .Values.postgres.persistence.existingClaim) }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-postgres
{{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.persistence.existingClaim }}
{{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end -}}
{{- end -}}

