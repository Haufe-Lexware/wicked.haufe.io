apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-api
  namespace: {{ default "default" .Values.namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      service: {{ template "fullname" . }}-api
      wicked: "true"
  template:
    metadata:
      labels:
        service: {{ template "fullname" . }}-api
        wicked: "true"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port:  '3001'
    spec:
{{- if .Values.useRbac }}
      serviceAccountName: {{ template "fullname" . }}-role 
{{- end }}
      containers:
      - name: {{ template "fullname" . }}-api
{{- if not .Values.config.useCustomApiImage }}          
        image: {{ .Values.image.repository }}api:{{ default "latest" .Values.image.tag }}{{ if .Values.image.alpine }}-alpine{{ end }}
{{- else }}
        image: {{ .Values.config.customApiImage }}
{{- end }}
        imagePullPolicy: {{ default "Always" .Values.image.pullPolicy }}
        env:
        - name: HELM_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: HELM_NAME
        - name: K8S_NAMESPACE
          value: {{ default "default" .Values.namespace }}
{{ if .Values.minikubeIP }}
        - name: MINIKUBE_IP
          value: {{ .Values.minikubeIP }}
{{ end }}
        - name: NODE_ENV
          value: {{ default "default" .Values.config.envName }}
{{- if not .Values.config.useCustomApiImage }}          
        - name: GIT_REPO
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: GIT_REPO
        - name: GIT_REVISION
          value: {{ default "" .Values.config.revision }}
        - name: GIT_BRANCH
          value: {{ default "" .Values.config.branch }}
        - name: GIT_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: GIT_CREDENTIALS
{{- end }}
        - name: PORTAL_CONFIG_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: PORTAL_CONFIG_KEY
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: DEBUG
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: LOG_LEVEL
        - name: PORTAL_NETWORK_PORTALHOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: PORTAL_NETWORK_PORTALHOST
        - name: PORTAL_NETWORK_APIHOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: PORTAL_NETWORK_APIHOST
        - name: PORTAL_INITIALUSERS0_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: PORTAL_INITIALUSERS0_PASSWORD
        - name: PORTAL_SESSIONSTORE_TYPE
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: PORTAL_SESSIONSTORE_TYPE
        - name: POSTGRES_CONNECT_RETRIES
          value: "{{ .Values.storage.pgConnectRetries }}"
        - name: POSTGRES_CONNECT_DELAY
          value: "{{ .Values.storage.pgConnectDelay }}"
        - name: POSTGRES_MAX_CLIENTS
          value: "{{ .Values.storage.pgMaxClients }}"
        - name: POSTGRES_CONNECT_TIMEOUT
          value: "{{ .Values.storage.pgConnectTimeout }}"
        - name: POSTGRES_IDLE_TIMEOUT
          value: "{{ .Values.storage.pgIdleTimeout }}"
{{- if and (not .Values.redis.deployRedis) .Values.redis.useRedis }}
        - name: PORTAL_SESSIONSTORE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: PORTAL_SESSIONSTORE_HOST
        - name: PORTAL_SESSIONSTORE_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}-apim-config
              key: PORTAL_SESSIONSTORE_PORT
        - name: PORTAL_SESSIONSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: PORTAL_SESSIONSTORE_PASSWORD
{{- end }}
{{- if .Values.storage.pgHost }}
        - name: PORTAL_STORAGE_PGHOST
          value: "{{ .Values.storage.pgHost }}"
{{- end }}
{{- if .Values.storage.pgPort }}
        - name: PORTAL_STORAGE_PGPORT
          value: "{{ .Values.storage.pgPort }}"
{{- end }}
{{- if .Values.storage.pgDatabase }}
        - name: PORTAL_STORAGE_PGDATABASE
          value: "{{ .Values.storage.pgDatabase }}"
{{- end }}
{{- if .Values.storage.pgUser }}
        - name: PORTAL_STORAGE_PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: PORTAL_STORAGE_PGUSER
{{- end }}
{{- if .Values.storage.pgPassword }}
        - name: PORTAL_STORAGE_PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-apim-secrets
              key: PORTAL_STORAGE_PGPASSWORD
{{- end }}
{{- if .Values.storage.pgSsl }}
        - name: PGSSLMODE
          value: require
{{- end }}
        ports:
        - containerPort: 3001
          protocol: TCP
        volumeMounts:
        - mountPath: /var/portal-api/dynamic
          name: portal-api-data-dynamic
{{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
{{- end }}
        readinessProbe:
          httpGet:
            path: /ping
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 2
        resources:
{{ toYaml .Values.resources.api | indent 10 }}
{{- if .Values.nodeSelector }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      volumes:
      - name: portal-api-data-dynamic
{{- if not .Values.persistence.enabled }}
        emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-api
{{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
{{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end -}}
